format = """
$hostname\
$directory\
$localip\
$os\
$git_branch\
$git_state\
$git_status\
$git_metrics\
$fill\
$dotnet\
$golang\
$python\
$direnv\
$nix_shell\
$lua\
$cmd_duration $jobs $time\
$line_break\
$container\
$shell\
$character"""

[nodejs]
format = "[$symbol($version )]($style)"

[fill]
symbol = " "

[directory]
style = "blue"
read_only = " Ô†Ω"
truncation_length = 4
truncate_to_repo = false

[character]
success_symbol = "[‚ùØ](purple)"
error_symbol = "[‚ùØ](red)"
vicmd_symbol = "[‚ùÆ](green)"

[git_branch]
symbol = "Ôêò "
format = "[$symbol$branch]($style) "
style = "bright-black"

[jobs]
symbol = "ÔÄì"
style = "bold red"
number_threshold = 1
format = "[$symbol]($style)"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "cyan"

[git_state]
format = '\([$state( $progress_current/$progress_total)]($style)\) '
style = "bright-black"

[git_metrics]
disabled = false

[cmd_duration]
format = "[$duration]($style)"
style = "yellow"

[memory_usage]
symbol = "Ô°ö "

[time]
disabled = false
style = "bold white"
format = "[$time]($style)"

[custom.stunnel]
when = "ps aux | grep stunnel | grep -v grep"
command = "ps -o etime= -p $(ps aux | grep stunnel | grep -v grep | awk '{print $2}')"
style = "red"
format = "[TUNNEL OPEN for $output]($style)"

[golang]
format = 'via [$symbol($version )($mod_version )]($style)'

[container]
format = '[$symbol \[$name\]]($style) '

[dotnet]
symbol = 'ü•Ö '
style = 'green'
heuristic = false
format = '[$symbol \[$name\]]($style) '

[localip]
ssh_only = false
format = '@[$localipv4](bold red) '
disabled = false

[nix_shell]
disabled = true
impure_msg = '[impure shell](bold red)'
pure_msg = '[pure shell](bold green)'
unknown_msg = '[unknown shell](bold yellow)'
format = 'via [‚òÉÔ∏è $state( \($name\))](bold blue) '

[lua]
format = 'via [$symbol($version )]($style)'
symbol = 'üåô '
detect_extensions = ['lua']

[python]
symbol = "ÓòÜ "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

# [custom.podman]
# symbol = "podman"
# command = ''
# format = '[$symbol]'
